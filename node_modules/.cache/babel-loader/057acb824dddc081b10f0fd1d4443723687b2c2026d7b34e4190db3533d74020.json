{"ast":null,"code":"var _jsxFileName = \"/Users/yashvimehta/Downloads/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval\n}) => {\n  _s();\n  const [approved, setApproved] = useState(transaction.approved);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: async newValue => {\n        await consumerSetTransactionApproval({\n          transactionId: transaction.id,\n          newValue\n        });\n        setApproved(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n// try {\n//   await consumerSetTransactionApproval({\n//     transactionId: transaction.id,\n//     newValue,\n//   })\n//   // Update local state only after the API call is successful\n//   setApproved(newValue)\n// } catch (error) {\n//   // Handle error if necessary\n//   console.error('Error occurred while setting transaction approval:', error)\n// }\n_s(TransactionPane, \"KPAjtgwy0mvFAelnTZhq541SWIA=\");\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\nvar _c;\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["useState","InputCheckbox","jsxDEV","_jsxDEV","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","_s","approved","setApproved","className","children","merchant","fileName","_jsxFileName","lineNumber","columnNumber","moneyFormatter","format","amount","employee","firstName","lastName","date","id","checked","disabled","onChange","newValue","transactionId","_c","Intl","NumberFormat","style","currency","$RefreshReg$"],"sources":["/Users/yashvimehta/Downloads/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\n\nexport const TransactionPane: TransactionPaneComponent = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n  const [approved, setApproved] = useState(transaction.approved)\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={async (newValue) => {\n          await consumerSetTransactionApproval({\n            transactionId: transaction.id,\n            newValue,\n          })\n\n          setApproved(newValue)\n        }}\n      />\n    </div>\n  )\n}\n\n\n// try {\n//   await consumerSetTransactionApproval({\n//     transactionId: transaction.id,\n//     newValue,\n//   })\n//   // Update local state only after the API call is successful\n//   setApproved(newValue)\n// } catch (error) {\n//   // Handle error if necessary\n//   console.error('Error occurred while setting transaction approval:', error)\n// }\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhD,OAAO,MAAMC,eAAyC,GAAGA,CAAC;EACxDC,WAAW;EACXC,OAAO;EACPC,sBAAsB,EAAEC;AAC1B,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACK,WAAW,CAACK,QAAQ,CAAC;EAE9D,oBACEP,OAAA;IAAKS,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBV,OAAA;MAAKS,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCV,OAAA;QAAGS,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAER,WAAW,CAACS,QAAQ,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnDf,OAAA;QAAAU,QAAA,EAAIM,cAAc,CAACC,MAAM,CAACf,WAAW,CAACgB,MAAM;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDf,OAAA;QAAGS,SAAS,EAAC,8BAA8B;QAAAC,QAAA,GACxCR,WAAW,CAACiB,QAAQ,CAACC,SAAS,EAAC,GAAC,EAAClB,WAAW,CAACiB,QAAQ,CAACE,QAAQ,EAAC,KAAG,EAACnB,WAAW,CAACoB,IAAI;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNf,OAAA,CAACF,aAAa;MACZyB,EAAE,EAAErB,WAAW,CAACqB,EAAG;MACnBC,OAAO,EAAEjB,QAAS;MAClBkB,QAAQ,EAAEtB,OAAQ;MAClBuB,QAAQ,EAAE,MAAOC,QAAQ,IAAK;QAC5B,MAAMtB,8BAA8B,CAAC;UACnCuB,aAAa,EAAE1B,WAAW,CAACqB,EAAE;UAC7BI;QACF,CAAC,CAAC;QAEFnB,WAAW,CAACmB,QAAQ,CAAC;MACvB;IAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAT,EAAA,CA5CaL,eAAyC;AAAA4B,EAAA,GAAzC5B,eAAyC;AA6CtD,MAAMe,cAAc,GAAG,IAAIc,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACpDC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAAA,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}