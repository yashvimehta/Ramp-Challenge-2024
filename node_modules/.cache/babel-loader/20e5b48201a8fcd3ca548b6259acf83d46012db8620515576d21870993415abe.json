{"ast":null,"code":"var _jsxFileName = \"/Users/yashvimehta/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n  _s = $RefreshSig$();\nimport Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function InputSelect({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel\n}) {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n    if (selectedItem === \"All Employees\") {\n      setSelectedValue(null); // Clear selected value\n      consumerOnChange(null); // Call consumerOnChange with null for \"All Employees\"\n    } else {\n      setSelectedValue(selectedItem); // Update selected value\n      consumerOnChange(selectedItem); // Call consumerOnChange for individual employee\n    }\n  }, [consumerOnChange]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: ({\n      getItemProps,\n      getLabelProps,\n      getMenuProps,\n      isOpen,\n      highlightedIndex,\n      selectedItem,\n      getToggleButtonProps,\n      inputValue\n    }) => {\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ...getItemProps({\n            key: \"All Employees\",\n            item: \"All Employees\",\n            // Set item value to \"All Employees\" for \"All Employees\"\n            className: classNames(\"RampInputSelect--dropdown-item\", {\n              \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === -1,\n              \"RampInputSelect--dropdown-item-selected\": selectedItem === null\n            })\n          }),\n          children: \"All Employees\"\n        }, \"All Employees\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true);\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 20\n          }, this);\n        }\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 20\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ...getItemProps({\n              key: \"All Employees\",\n              item: null,\n              // Set item value to null for \"All Employees\"\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === -1,\n                \"RampInputSelect--dropdown-item-selected\": selectedItem === null\n              })\n            }),\n            children: \"All Employees\"\n          }, \"All Employees\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getItemProps({\n                key: parsedItem.value,\n                index,\n                item,\n                className: classNames(\"RampInputSelect--dropdown-item\", {\n                  \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                  \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n                })\n              }),\n              children: parsedItem.label\n            }, parsedItem.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(InputSelect, \"P/yBOClT+tikRlX+sSLK7WIsfTo=\");\n_c = InputSelect;\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n  return {\n    top: 0,\n    left: 0\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","classNames","jsxDEV","_jsxDEV","Fragment","_Fragment","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","_s","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","selectedItem","id","itemToString","item","children","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","key","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","parsedItem","value","renderItems","length","_c","getDropdownPosition","target","Element","getBoundingClientRect","scrollY","window","$RefreshReg$"],"sources":["/Users/yashvimehta/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\"\nimport { useCallback, useState } from \"react\"\nimport classNames from \"classnames\"\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\"\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null)\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\n    top: 0,\n    left: 0,\n  })\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return;\n      }\n  \n      if (selectedItem === \"All Employees\") {\n        setSelectedValue(null); // Clear selected value\n        consumerOnChange(null); // Call consumerOnChange with null for \"All Employees\"\n      } else {\n        setSelectedValue(selectedItem); // Update selected value\n        consumerOnChange(selectedItem); // Call consumerOnChange for individual employee\n      }\n    },\n    [consumerOnChange]\n  );\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps()\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem)\n\n        return (\n          <>\n            <div\n              key=\"All Employees\"\n              {...getItemProps({\n                key: \"All Employees\",\n                item: \"All Employees\", // Set item value to \"All Employees\" for \"All Employees\"\n                className: classNames(\"RampInputSelect--dropdown-item\", {\n                  \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === -1,\n                  \"RampInputSelect--dropdown-item-selected\": selectedItem === null,\n                }),\n              })}\n            >\n              All Employees\n            </div>\n            {items.map((item, index) => {\n              const parsedItem = parseItem(item);\n              return (\n                <div\n                  key={parsedItem.value}\n                  {...getItemProps({\n                    key: parsedItem.value,\n                    index,\n                    item,\n                    className: classNames(\"RampInputSelect--dropdown-item\", {\n                      \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                      \"RampInputSelect--dropdown-item-selected\":\n                        parsedSelectedItem?.value === parsedItem.value,\n                    }),\n                  })}\n                >\n                  {parsedItem.label}\n                </div>\n              );\n            })}\n          </>\n        );\n        \n\n        \n        function renderItems() {\n          if (!isOpen) {\n            return null;\n          }\n        \n          if (isLoading) {\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>;\n          }\n        \n          if (items.length === 0) {\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>;\n          }\n        \n          \n          return (\n            <>\n              <div\n                key=\"All Employees\"\n                {...getItemProps({\n                  key: \"All Employees\",\n                  item: null, // Set item value to null for \"All Employees\"\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === -1,\n                    \"RampInputSelect--dropdown-item-selected\": selectedItem === null,\n                  }),\n                })}\n              >\n                All Employees\n              </div>\n              {items.map((item, index) => {\n                const parsedItem = parseItem(item);\n                return (\n                  <div\n                    key={parsedItem.value}\n                    {...getItemProps({\n                      key: parsedItem.value,\n                      index,\n                      item,\n                      className: classNames(\"RampInputSelect--dropdown-item\", {\n                        \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                        \"RampInputSelect--dropdown-item-selected\":\n                          parsedSelectedItem?.value === parsedItem.value,\n                      }),\n                    })}\n                  >\n                    {parsedItem.label}\n                  </div>\n                );\n              })}\n            </>\n          );\n          \n        }\n        \n      }}\n    </Downshift>\n  )\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect()\n    const { scrollY } = window\n    return {\n      top: scrollY + top + 63,\n      left,\n    }\n  }\n\n  return { top: 0, left: 0 }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}